{"version":3,"file":"Mutation.js","names":["dotenv","config","SECRET_KEY","process","env","Mutation","createBook","_","args","BookModel","UserModel","token","GraphQLYogaError","verify","id","data","title","numOfPages","newBook","author","mongoose","Types","ObjectId","save","createdBook","_doc","_id","createUser","username","email","password","age","hash","hashedPassword","newUser","createdUser","console","log","userLogin","findOne","foundUser","compare","isMatch","sign"],"sources":["../../../src/graphql/resolvers/Mutation.js"],"sourcesContent":["import { GraphQLYogaError } from '@graphql-yoga/node';\r\nimport { compare, hash } from 'bcrypt';\r\nimport * as dotenv from 'dotenv';\r\nimport { sign, verify } from 'jsonwebtoken';\r\nimport mongoose from 'mongoose';\r\n\r\ndotenv.config();\r\nconst { SECRET_KEY } = process.env;\r\n\r\nconst Mutation = {\r\n    createBook: async (_, args, { BookModel, UserModel, token }) => {\r\n\r\n        if (!token) {\r\n            throw new GraphQLYogaError(\"Login required\")\r\n        }\r\n        try {\r\n            const { id } = await verify(token, SECRET_KEY);\r\n            const { title, numOfPages } = args.data;\r\n            const newBook = new BookModel({ title, numOfPages, author: mongoose.Types.ObjectId(id) })\r\n            const createdBook = await newBook.save()\r\n            return {\r\n                id: createdBook._doc._id,\r\n                title: createdBook._doc.title,\r\n                numOfPages: createdBook._doc.numOfPages\r\n            }\r\n        } catch (err) {\r\n            throw new GraphQLYogaError(err)\r\n        }\r\n    },\r\n    createUser: async (_, args, { UserModel }) => {\r\n        try {\r\n            const { username, email, password, age } = args.data;\r\n            const hashedPassword = await hash(password, 10)\r\n            const newUser = new UserModel({ username, email, age, password: hashedPassword })\r\n            const createdUser = await newUser.save()\r\n            return {\r\n                id: createdUser._doc._id,\r\n                username: createdUser._doc.username,\r\n                email: createdUser._doc.email,\r\n                age: createdUser._doc.age\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw new GraphQLYogaError(err)\r\n        }\r\n    },\r\n    userLogin: async (_, args, { UserModel }) => {\r\n        try {\r\n            const { email, password } = args.data;\r\n            const foundUser = await UserModel.findOne({ email })\r\n            if (!foundUser) {\r\n                throw new GraphQLYogaError(\"Unable to locate user for \" + email)\r\n            }\r\n            const isMatch = await compare(password, foundUser._doc.password)\r\n            if (!isMatch) {\r\n                throw new GraphQLYogaError(\"Bad Credentials\")\r\n            }\r\n            const token = sign({ id: foundUser._doc._id, email: foundUser._doc.email }, SECRET_KEY)\r\n            return {\r\n                token: token,\r\n                username: foundUser._doc.username,\r\n                age: foundUser._doc.age\r\n            }\r\n        } catch (err) {\r\n            throw new GraphQLYogaError(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport { Mutation };\r\n\r\n"],"mappings":"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"}